
    
    
    
    [{"authors":null,"categories":null,"content":"I am currently interested in methods for causal inference, explainable AI, and program inference.\nDuring my masterâ€™s degree at EPFL, I have carried out multiple projects on applied machine learning, such as employing autoencoders to predict stellar properties at the astrophysics laboratory and exploring computer vision methods for image registration of a flyâ€™s neuron activations in Pavan Ramdyaâ€™s Lab. Finally, during my thesis at IBM Research in ZÃ¼rich, I applied NLP methods, uncertainty quantification, and explainable AI techniques to quantify chemical sustainability.\nI enjoy hiking â›°, playing the piano ðŸŽ¹, watching old movies ðŸ“½, and learning both about philosophy and the newest tech!\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am currently interested in methods for causal inference, explainable AI, and program inference.\nDuring my masterâ€™s degree at EPFL, I have carried out multiple projects on applied machine learning, such as employing autoencoders to predict stellar properties at the astrophysics laboratory and exploring computer vision methods for image registration of a flyâ€™s neuron activations in Pavan Ramdyaâ€™s Lab.","tags":null,"title":"AdriÃ¡n Sager La Ganga","type":"authors"},{"authors":[],"categories":[],"content":" In 2020 I was following lectures on automatic control and learned about the transfer function of a system and ways to visualize it, at which point I was curious so I went ahead and wrote a simple visualizer for generic transfer functions.\nYou can jump ahead to the visualizer.\nSetup The basic idea is that we can build a system with a feedback loop that takes an input signal $x(t)$ and outputs another signal $y(t)$:\nWe then focus on linear time-invariant (LTI) transformations, which in a few words are those which take as input $e(t)$ and output $y(t) = (e \\ast h)(t)$, where $h(t)$ is called the impulse response since it is exatly the value of the output $y(t)$ if our input where an impulse $x(t)=\\delta(t)$.\nIn the Laplace function space, the convolution of our transformation becomes a multiplication $Y(s) = H(s)E(s)$.\nLetâ€™s plug in our $H(s)$ in the feedback loop!\nWe recursively apply it so we end up with:\n$$ \\begin{align*} Y(s) \u0026amp;= \\left( H(s) + H(s)^2 + H(s)^3 + \\dots \\right) \\cdot X(s) \\\\ \u0026amp;= \\frac{H(s)}{1 - H(s)} \\cdot X(s) \\end{align*} $$ Visualizer Note that if our $H(s)$ touches the value 1 weâ€™ll end up with an $\\infty$, oops.\nSo, when designing $H(s)$ we want to make sure that it is some distance away from 1.\nBut $H: \\mathbb{C} \\rightarrow \\mathbb{C}$, how can we visualize it?\nWell, there are multiple approaches and this is where I got curious and decided to write a visualizer in p5.js. I included a cartesian plot and a Nichols plot. Other common plots include Bode and Nyquist.\nI also included a simple abstract syntax tree (AST) parser and traversal so you can write any $H(s)$ you want and see what happens!\nYou can try it out right here:\nControls:\nDrag to move around.\nMouse wheel to zoom in/out.\nSpace to reset offset.\n","date":1677513077,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1677513077,"objectID":"dfbdef4f447a336c3440bf8fb1e9da0a","permalink":"https://sager611.github.io/post/p5js-vis-transfer-function/","publishdate":"2023-02-27T16:51:17+01:00","relpermalink":"/post/p5js-vis-transfer-function/","section":"post","summary":"In 2020 I was following lectures on automatic control and learned about the transfer function of a system and ways to visualize it, at which point I was curious so I went ahead and wrote a simple visualizer for generic transfer functions.","tags":["p5js","control theory"],"title":"Visualizing transfer functions in p5.js","type":"post"},{"authors":[],"categories":[],"content":"","date":1677339429,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1677339429,"objectID":"bb373e34aa74a9e0f96d626986715a37","permalink":"https://sager611.github.io/project/epfl-master-thesis/","publishdate":"2023-02-25T16:37:09+01:00","relpermalink":"/project/epfl-master-thesis/","section":"project","summary":"","tags":["UQ","NLP","chemistry","sustainability"],"title":"UQ-based metrics for chemical sustainability","type":"project"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Letâ€™s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://sager611.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"}]